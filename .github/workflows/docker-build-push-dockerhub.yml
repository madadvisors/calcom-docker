# This is a basic workflow to help you get started with Actions

name: Build and push image to DockerHub

# Controls when the workflow will run
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  # update on run of Update Calendso nightly submodule update
  workflow_run:
    workflows: ["Update Calendso"]
    branches: [main]
    types:
      - completed
  # Allow running workflow manually from the Actions tab
  workflow_dispatch:
    # Uncomment below to allow specific version workflow run
    # inputs:
    #   version:
    #     description: 'Version to build'
    #     required: true

# Leaving in example for releases. Initially we simply push to 'latest'
# on:
  # release:
    # types: [ created ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: write
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: checkout
        uses: actions/checkout@v4

      - name: Git submodule update
        run: |
          git submodule update --init

      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GTOKEN }}

      - name: Docker Metadata for Final Image Build
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/calcom
          flavor: |
            latest=true

      - name: Docker Build and Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: true
          tags: |
             ${{ steps.docker_meta.outputs.tags }} , 
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: |
            type=gha,scope=main-base
          platforms: linux/amd64
          build-args: |
            NEXT_PUBLIC_WEBAPP_URL=${{ env.NEXT_PUBLIC_WEBAPP_URL }}
            NEXT_PUBLIC_API_V2_URL=${{ env.NEXT_PUBLIC_API_V2_URL }}
            NEXT_PUBLIC_LICENSE_CONSENT=${{ env.NEXT_PUBLIC_LICENSE_CONSENT }}
            NEXT_PUBLIC_TELEMETRY_KEY=${{ env.NEXT_PUBLIC_TELEMETRY_KEY }}
            DATABASE_URL=postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@${{ env.DATABASE_HOST }}/${{ env.POSTGRES_DB }}
            DATABASE_DIRECT_URL=postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@${{ env.DATABASE_HOST }}/${{ env.POSTGRES_DB }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  